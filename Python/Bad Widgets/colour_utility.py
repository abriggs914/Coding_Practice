import dataclasses
from dataclasses import dataclass
from random import randint, choice
from utility import clamp, flatten, reduce

#######################################################################################################################
#######################################################################################################################
#######################################################################################################################


VERSION = \
    """	
        General Utility file of RGB colour values
        Version...........1.21
        Date........2022-10-25
        Author....Avery Briggs
    """


def VERSION_NUMBER():
    return float(VERSION.split("\n")[2].split(".")[-2] + "." + VERSION.split("\n")[2].split(".")[-1])


def VERSION_DATE():
    return VERSION.split("\n")[3].split(".")[-1]


def VERSION_AUTHOR():
    return VERSION.split("\n")[4].split(".")[-1]


#######################################################################################################################
#######################################################################################################################
#######################################################################################################################


WILDERNESS_MINT = (98, 152, 100)

BWS_RED = (171, 35, 40)  # Crimson red
BWS_BLACK = (37, 40, 42)  # Black
BWS_GREY = (162, 170, 173)

STARGATE_BLUE = (27, 69, 129)

BLACK = (0, 0, 0)  # Black
WHITE = (255, 255, 255)  # White
DARK_GRAY = (50, 50, 50)  # Dark gray
LIGHT_GRAY = (175, 175, 175)  # Light gray
RED = (255, 0, 0)  # Red
GREEN = (0, 255, 0)  # Green
BLUE = (0, 0, 255)  # Blue

ALICEBLUE = (240, 248, 255)
ANTIQUEWHITE = (250, 235, 215)
ANTIQUEWHITE_1 = (255, 239, 219)
ANTIQUEWHITE_2 = (238, 223, 204)
ANTIQUEWHITE_3 = (205, 192, 176)
ANTIQUEWHITE_4 = (139, 131, 120)
AQUAMARINE_1__AQUAMARINE_ = (127, 255, 212)
AQUAMARINE_2 = (118, 238, 198)
AQUAMARINE_3__MEDIUMAQUAMARINE_ = (102, 205, 170)
AQUAMARINE_4 = (69, 139, 116)
AZURE_1__AZURE_ = (240, 255, 255)
AZURE_2 = (224, 238, 238)
AZURE_3 = (193, 205, 205)
AZURE_4 = (131, 139, 139)
BANANA = (227, 207, 87)
BEIGE = (245, 245, 220)
BISQUE_1__BISQUE_ = (255, 228, 196)
BISQUE_2 = (238, 213, 183)
BISQUE_3 = (205, 183, 158)
BISQUE_4 = (139, 125, 107)
BLANCHEDALMOND = (255, 235, 205)
BLUEVIOLET = (138, 43, 226)
BLUE_2 = (0, 0, 238)
BLUE_3__MEDIUMBLUE_ = (0, 0, 205)
BLUE_4__DARKBLUE_ = (0, 0, 139)
BRICK = (156, 102, 31)
BROWN = (165, 42, 42)
BROWN_1 = (255, 64, 64)
BROWN_2 = (238, 59, 59)
BROWN_3 = (205, 51, 51)
BROWN_4 = (139, 35, 35)
BURLYWOOD = (222, 184, 135)
BURLYWOOD_1 = (255, 211, 155)
BURLYWOOD_2 = (238, 197, 145)
BURLYWOOD_3 = (205, 170, 125)
BURLYWOOD_4 = (139, 115, 85)
BURNTSIENNA = (138, 54, 15)
BURNTUMBER = (138, 51, 36)
CADETBLUE = (95, 158, 160)
CADETBLUE_1 = (152, 245, 255)
CADETBLUE_2 = (142, 229, 238)
CADETBLUE_3 = (122, 197, 205)
CADETBLUE_4 = (83, 134, 139)
CADMIUMORANGE = (255, 97, 3)
CADMIUMYELLOW = (255, 153, 18)
CARROT = (237, 145, 33)
CHARTREUSE_1__CHARTREUSE_ = (127, 255, 0)
CHARTREUSE_2 = (118, 238, 0)
CHARTREUSE_3 = (102, 205, 0)
CHARTREUSE_4 = (69, 139, 0)
CHOCOLATE = (210, 105, 30)
CHOCOLATE_1 = (255, 127, 36)
CHOCOLATE_2 = (238, 118, 33)
CHOCOLATE_3 = (205, 102, 29)
CHOCOLATE_4__SADDLEBROWN_ = (139, 69, 19)
COBALT = (61, 89, 171)
COBALTGREEN = (61, 145, 64)
COLDGREY = (128, 138, 135)
CORAL = (255, 127, 80)
CORAL_1 = (255, 114, 86)
CORAL_2 = (238, 106, 80)
CORAL_3 = (205, 91, 69)
CORAL_4 = (139, 62, 47)
CORNFLOWERBLUE = (100, 149, 237)
CORNSILK_1__CORNSILK_ = (255, 248, 220)
CORNSILK_2 = (238, 232, 205)
CORNSILK_3 = (205, 200, 177)
CORNSILK_4 = (139, 136, 120)
CRIMSON = (220, 20, 60)
CYAN__AQUA = (0, 255, 255)
CYAN_2 = (0, 238, 238)
CYAN_3 = (0, 205, 205)
CYAN_4__DARKCYAN_ = (0, 139, 139)
DARKGOLDENROD = (184, 134, 11)
DARKGOLDENROD_1 = (255, 185, 15)
DARKGOLDENROD_2 = (238, 173, 14)
DARKGOLDENROD_3 = (205, 149, 12)
DARKGOLDENROD_4 = (139, 101, 8)
DARKGRAY = (169, 169, 169)
DARKGREEN = (0, 100, 0)
DARKKHAKI = (189, 183, 107)
DARKOLIVEGREEN = (85, 107, 47)
DARKOLIVEGREEN_1 = (202, 255, 112)
DARKOLIVEGREEN_2 = (188, 238, 104)
DARKOLIVEGREEN_3 = (162, 205, 90)
DARKOLIVEGREEN_4 = (110, 139, 61)
DARKORANGE = (255, 140, 0)
DARKORANGE_1 = (255, 127, 0)
DARKORANGE_2 = (238, 118, 0)
DARKORANGE_3 = (205, 102, 0)
DARKORANGE_4 = (139, 69, 0)
DARKORCHID = (153, 50, 204)
DARKORCHID_1 = (191, 62, 255)
DARKORCHID_2 = (178, 58, 238)
DARKORCHID_3 = (154, 50, 205)
DARKORCHID_4 = (104, 34, 139)
DARKSALMON = (233, 150, 122)
DARKSEAGREEN = (143, 188, 143)
DARKSEAGREEN_1 = (193, 255, 193)
DARKSEAGREEN_2 = (180, 238, 180)
DARKSEAGREEN_3 = (155, 205, 155)
DARKSEAGREEN_4 = (105, 139, 105)
DARKSLATEBLUE = (72, 61, 139)
DARKSLATEGRAY = (47, 79, 79)
DARKSLATEGRAY_1 = (151, 255, 255)
DARKSLATEGRAY_2 = (141, 238, 238)
DARKSLATEGRAY_3 = (121, 205, 205)
DARKSLATEGRAY_4 = (82, 139, 139)
DARKTURQUOISE = (0, 206, 209)
DARKVIOLET = (148, 0, 211)
DEEPPINK_1__DEEPPINK_ = (255, 20, 147)
DEEPPINK_2 = (238, 18, 137)
DEEPPINK_3 = (205, 16, 118)
DEEPPINK_4 = (139, 10, 80)
DEEPSKYBLUE_1__DEEPSKYBLUE_ = (0, 191, 255)
DEEPSKYBLUE_2 = (0, 178, 238)
DEEPSKYBLUE_3 = (0, 154, 205)
DEEPSKYBLUE_4 = (0, 104, 139)
DIMGRAY__GRAY_42_ = (105, 105, 105)
DODGERBLUE_1__DODGERBLUE_ = (30, 144, 255)
DODGERBLUE_2 = (28, 134, 238)
DODGERBLUE_3 = (24, 116, 205)
DODGERBLUE_4 = (16, 78, 139)
EGGSHELL = (252, 230, 201)
EMERALDGREEN = (0, 201, 87)
FIREBRICK = (178, 34, 34)
FIREBRICK_1 = (255, 48, 48)
FIREBRICK_2 = (238, 44, 44)
FIREBRICK_3 = (205, 38, 38)
FIREBRICK_4 = (139, 26, 26)
FLESH = (255, 125, 64)
FLORALWHITE = (255, 250, 240)
FORESTGREEN = (34, 139, 34)
GAINSBORO = (220, 220, 220)
GHOSTWHITE = (248, 248, 255)
GOLDENROD = (218, 165, 32)
GOLDENROD_1 = (255, 193, 37)
GOLDENROD_2 = (238, 180, 34)
GOLDENROD_3 = (205, 155, 29)
GOLDENROD_4 = (139, 105, 20)
GOLD_1__GOLD_ = (255, 215, 0)
GOLD_2 = (238, 201, 0)
GOLD_3 = (205, 173, 0)
GOLD_4 = (139, 117, 0)
GRAY = (128, 128, 128)
GRAY_1 = (3, 3, 3)
GRAY_10 = (26, 26, 26)
GRAY_11 = (28, 28, 28)
GRAY_12 = (31, 31, 31)
GRAY_13 = (33, 33, 33)
GRAY_14 = (36, 36, 36)
GRAY_15 = (38, 38, 38)
GRAY_16 = (41, 41, 41)
GRAY_17 = (43, 43, 43)
GRAY_18 = (46, 46, 46)
GRAY_19 = (48, 48, 48)
GRAY_2 = (5, 5, 5)
GRAY_20 = (51, 51, 51)
GRAY_21 = (54, 54, 54)
GRAY_22 = (56, 56, 56)
GRAY_23 = (59, 59, 59)
GRAY_24 = (61, 61, 61)
GRAY_25 = (64, 64, 64)
GRAY_26 = (66, 66, 66)
GRAY_27 = (69, 69, 69)
GRAY_28 = (71, 71, 71)
GRAY_29 = (74, 74, 74)
GRAY_3 = (8, 8, 8)
GRAY_30 = (77, 77, 77)
GRAY_31 = (79, 79, 79)
GRAY_32 = (82, 82, 82)
GRAY_33 = (84, 84, 84)
GRAY_34 = (87, 87, 87)
GRAY_35 = (89, 89, 89)
GRAY_36 = (92, 92, 92)
GRAY_37 = (94, 94, 94)
GRAY_38 = (97, 97, 97)
GRAY_39 = (99, 99, 99)
GRAY_4 = (10, 10, 10)
GRAY_40 = (102, 102, 102)
GRAY_42 = (107, 107, 107)
GRAY_43 = (110, 110, 110)
GRAY_44 = (112, 112, 112)
GRAY_45 = (115, 115, 115)
GRAY_46 = (117, 117, 117)
GRAY_47 = (120, 120, 120)
GRAY_48 = (122, 122, 122)
GRAY_49 = (125, 125, 125)
GRAY_5 = (13, 13, 13)
GRAY_50 = (127, 127, 127)
GRAY_51 = (130, 130, 130)
GRAY_52 = (133, 133, 133)
GRAY_53 = (135, 135, 135)
GRAY_54 = (138, 138, 138)
GRAY_55 = (140, 140, 140)
GRAY_56 = (143, 143, 143)
GRAY_57 = (145, 145, 145)
GRAY_58 = (148, 148, 148)
GRAY_59 = (150, 150, 150)
GRAY_6 = (15, 15, 15)
GRAY_60 = (153, 153, 153)
GRAY_61 = (156, 156, 156)
GRAY_62 = (158, 158, 158)
GRAY_63 = (161, 161, 161)
GRAY_64 = (163, 163, 163)
GRAY_65 = (166, 166, 166)
GRAY_66 = (168, 168, 168)
GRAY_67 = (171, 171, 171)
GRAY_68 = (173, 173, 173)
GRAY_69 = (176, 176, 176)
GRAY_7 = (18, 18, 18)
GRAY_70 = (179, 179, 179)
GRAY_71 = (181, 181, 181)
GRAY_72 = (184, 184, 184)
GRAY_73 = (186, 186, 186)
GRAY_74 = (189, 189, 189)
GRAY_75 = (191, 191, 191)
GRAY_76 = (194, 194, 194)
GRAY_77 = (196, 196, 196)
GRAY_78 = (199, 199, 199)
GRAY_79 = (201, 201, 201)
GRAY_8 = (20, 20, 20)
GRAY_80 = (204, 204, 204)
GRAY_81 = (207, 207, 207)
GRAY_82 = (209, 209, 209)
GRAY_83 = (212, 212, 212)
GRAY_84 = (214, 214, 214)
GRAY_85 = (217, 217, 217)
GRAY_86 = (219, 219, 219)
GRAY_87 = (222, 222, 222)
GRAY_88 = (224, 224, 224)
GRAY_89 = (227, 227, 227)
GRAY_9 = (23, 23, 23)
GRAY_90 = (229, 229, 229)
GRAY_91 = (232, 232, 232)
GRAY_92 = (235, 235, 235)
GRAY_93 = (237, 237, 237)
GRAY_94 = (240, 240, 240)
GRAY_95 = (242, 242, 242)
GRAY_97 = (247, 247, 247)
GRAY_98 = (250, 250, 250)
GRAY_99 = (252, 252, 252)
GREENYELLOW = (173, 255, 47)
GREEN_1__LIME_ = (0, 255, 0)
GREEN_2 = (0, 238, 0)
GREEN_3 = (0, 205, 0)
GREEN_4 = (0, 139, 0)
HONEYDEW_1__HONEYDEW_ = (240, 255, 240)
HONEYDEW_2 = (224, 238, 224)
HONEYDEW_3 = (193, 205, 193)
HONEYDEW_4 = (131, 139, 131)
HOTPINK = (255, 105, 180)
HOTPINK_1 = (255, 110, 180)
HOTPINK_2 = (238, 106, 167)
HOTPINK_3 = (205, 96, 144)
HOTPINK_4 = (139, 58, 98)
INDIANRED = (205, 92, 92)
INDIANRED_1 = (255, 106, 106)
INDIANRED_2 = (238, 99, 99)
INDIANRED_3 = (205, 85, 85)
INDIANRED_4 = (139, 58, 58)
INDIAN_RED = (176, 23, 31)
INDIGO = (75, 0, 130)
IVORYBLACK = (41, 36, 33)
IVORY_1__IVORY_ = (255, 255, 240)
IVORY_2 = (238, 238, 224)
IVORY_3 = (205, 205, 193)
IVORY_4 = (139, 139, 131)
KHAKI = (240, 230, 140)
KHAKI_1 = (255, 246, 143)
KHAKI_2 = (238, 230, 133)
KHAKI_3 = (205, 198, 115)
KHAKI_4 = (139, 134, 78)
LAVENDER = (230, 230, 250)
LAVENDERBLUSH_1__LAVENDERBLUSH_ = (255, 240, 245)
LAVENDERBLUSH_2 = (238, 224, 229)
LAVENDERBLUSH_3 = (205, 193, 197)
LAVENDERBLUSH_4 = (139, 131, 134)
LAWNGREEN = (124, 252, 0)
LEMONCHIFFON_1__LEMONCHIFFON_ = (255, 250, 205)
LEMONCHIFFON_2 = (238, 233, 191)
LEMONCHIFFON_3 = (205, 201, 165)
LEMONCHIFFON_4 = (139, 137, 112)
LIGHTBLUE = (173, 216, 230)
LIGHTBLUE_1 = (191, 239, 255)
LIGHTBLUE_2 = (178, 223, 238)
LIGHTBLUE_3 = (154, 192, 205)
LIGHTBLUE_4 = (104, 131, 139)
LIGHTCORAL = (240, 128, 128)
LIGHTCYAN_1__LIGHTCYAN_ = (224, 255, 255)
LIGHTCYAN_2 = (209, 238, 238)
LIGHTCYAN_3 = (180, 205, 205)
LIGHTCYAN_4 = (122, 139, 139)
LIGHTGOLDENRODYELLOW = (250, 250, 210)
LIGHTGOLDENROD_1 = (255, 236, 139)
LIGHTGOLDENROD_2 = (238, 220, 130)
LIGHTGOLDENROD_3 = (205, 190, 112)
LIGHTGOLDENROD_4 = (139, 129, 76)
LIGHTGREY = (211, 211, 211)
LIGHTPINK = (255, 182, 193)
LIGHTPINK_1 = (255, 174, 185)
LIGHTPINK_2 = (238, 162, 173)
LIGHTPINK_3 = (205, 140, 149)
LIGHTPINK_4 = (139, 95, 101)
LIGHTSALMON_1__LIGHTSALMON_ = (255, 160, 122)
LIGHTSALMON_2 = (238, 149, 114)
LIGHTSALMON_3 = (205, 129, 98)
LIGHTSALMON_4 = (139, 87, 66)
LIGHTSEAGREEN = (32, 178, 170)
LIGHTSKYBLUE = (135, 206, 250)
LIGHTSKYBLUE_1 = (176, 226, 255)
LIGHTSKYBLUE_2 = (164, 211, 238)
LIGHTSKYBLUE_3 = (141, 182, 205)
LIGHTSKYBLUE_4 = (96, 123, 139)
LIGHTSLATEBLUE = (132, 112, 255)
LIGHTSLATEGRAY = (119, 136, 153)
LIGHTSTEELBLUE = (176, 196, 222)
LIGHTSTEELBLUE_1 = (202, 225, 255)
LIGHTSTEELBLUE_2 = (188, 210, 238)
LIGHTSTEELBLUE_3 = (162, 181, 205)
LIGHTSTEELBLUE_4 = (110, 123, 139)
LIGHTYELLOW_1__LIGHTYELLOW_ = (255, 255, 224)
LIGHTYELLOW_2 = (238, 238, 209)
LIGHTYELLOW_3 = (205, 205, 180)
LIGHTYELLOW_4 = (139, 139, 122)
LIMEGREEN = (50, 205, 50)
LINEN = (250, 240, 230)
MAGENTA_2 = (238, 0, 238)
MAGENTA_3 = (205, 0, 205)
MAGENTA_4__DARKMAGENTA_ = (139, 0, 139)
MAGENTA__FUCHSIA_ = (255, 0, 255)
MANGANESEBLUE = (3, 168, 158)
MAROON = (128, 0, 0)
MAROON_1 = (255, 52, 179)
MAROON_2 = (238, 48, 167)
MAROON_3 = (205, 41, 144)
MAROON_4 = (139, 28, 98)
MEDIUMORCHID = (186, 85, 211)
MEDIUMORCHID_1 = (224, 102, 255)
MEDIUMORCHID_2 = (209, 95, 238)
MEDIUMORCHID_3 = (180, 82, 205)
MEDIUMORCHID_4 = (122, 55, 139)
MEDIUMPURPLE = (147, 112, 219)
MEDIUMPURPLE_1 = (171, 130, 255)
MEDIUMPURPLE_2 = (159, 121, 238)
MEDIUMPURPLE_3 = (137, 104, 205)
MEDIUMPURPLE_4 = (93, 71, 139)
MEDIUMSEAGREEN = (60, 179, 113)
MEDIUMSLATEBLUE = (123, 104, 238)
MEDIUMSPRINGGREEN = (0, 250, 154)
MEDIUMTURQUOISE = (72, 209, 204)
MEDIUMVIOLETRED = (199, 21, 133)
MELON = (227, 168, 105)
MIDNIGHTBLUE = (25, 25, 112)
MINT = (189, 252, 201)
MINTCREAM = (245, 255, 250)
MISTYROSE_1__MISTYROSE_ = (255, 228, 225)
MISTYROSE_2 = (238, 213, 210)
MISTYROSE_3 = (205, 183, 181)
MISTYROSE_4 = (139, 125, 123)
MOCCASIN = (255, 228, 181)
NAVAJOWHITE_1__NAVAJOWHITE_ = (255, 222, 173)
NAVAJOWHITE_2 = (238, 207, 161)
NAVAJOWHITE_3 = (205, 179, 139)
NAVAJOWHITE_4 = (139, 121, 94)
NAVY = (0, 0, 128)
OLDLACE = (253, 245, 230)
OLIVE = (128, 128, 0)
OLIVEDRAB = (107, 142, 35)
OLIVEDRAB_1 = (192, 255, 62)
OLIVEDRAB_2 = (179, 238, 58)
OLIVEDRAB_3__YELLOWGREEN_ = (154, 205, 50)
OLIVEDRAB_4 = (105, 139, 34)
ORANGE = (255, 128, 0)
ORANGERED_1__ORANGERED_ = (255, 69, 0)
ORANGERED_2 = (238, 64, 0)
ORANGERED_3 = (205, 55, 0)
ORANGERED_4 = (139, 37, 0)
ORANGE_1__ORANGE_ = (255, 165, 0)
ORANGE_2 = (238, 154, 0)
ORANGE_3 = (205, 133, 0)
ORANGE_4 = (139, 90, 0)
ORCHID = (218, 112, 214)
ORCHID_1 = (255, 131, 250)
ORCHID_2 = (238, 122, 233)
ORCHID_3 = (205, 105, 201)
ORCHID_4 = (139, 71, 137)
PALEGOLDENROD = (238, 232, 170)
PALEGREEN = (152, 251, 152)
PALEGREEN_1 = (154, 255, 154)
PALEGREEN_2__LIGHTGREEN_ = (144, 238, 144)
PALEGREEN_3 = (124, 205, 124)
PALEGREEN_4 = (84, 139, 84)
PALETURQUOISE_1 = (187, 255, 255)
PALETURQUOISE_2__PALETURQUOISE_ = (174, 238, 238)
PALETURQUOISE_3 = (150, 205, 205)
PALETURQUOISE_4 = (102, 139, 139)
PALEVIOLETRED = (219, 112, 147)
PALEVIOLETRED_1 = (255, 130, 171)
PALEVIOLETRED_2 = (238, 121, 159)
PALEVIOLETRED_3 = (205, 104, 137)
PALEVIOLETRED_4 = (139, 71, 93)
PAPAYAWHIP = (255, 239, 213)
PEACHPUFF_1__PEACHPUFF_ = (255, 218, 185)
PEACHPUFF_2 = (238, 203, 173)
PEACHPUFF_3 = (205, 175, 149)
PEACHPUFF_4 = (139, 119, 101)
PEACOCK = (51, 161, 201)
PINK = (255, 192, 203)
PINK_1 = (255, 181, 197)
PINK_2 = (238, 169, 184)
PINK_3 = (205, 145, 158)
PINK_4 = (139, 99, 108)
PLUM = (221, 160, 221)
PLUM_1 = (255, 187, 255)
PLUM_2 = (238, 174, 238)
PLUM_3 = (205, 150, 205)
PLUM_4 = (139, 102, 139)
POWDERBLUE = (176, 224, 230)
PURPLE = (128, 0, 128)
PURPLE_1 = (155, 48, 255)
PURPLE_2 = (145, 44, 238)
PURPLE_3 = (125, 38, 205)
PURPLE_4 = (85, 26, 139)
RASPBERRY = (135, 38, 87)
RAWSIENNA = (199, 97, 20)
RED_1__RED_ = (255, 0, 0)
RED_2 = (238, 0, 0)
RED_3 = (205, 0, 0)
RED_4__DARKRED_ = (139, 0, 0)
ROSYBROWN = (188, 143, 143)
ROSYBROWN_1 = (255, 193, 193)
ROSYBROWN_2 = (238, 180, 180)
ROSYBROWN_3 = (205, 155, 155)
ROSYBROWN_4 = (139, 105, 105)
ROYALBLUE = (65, 105, 225)
ROYALBLUE_1 = (72, 118, 255)
ROYALBLUE_2 = (67, 110, 238)
ROYALBLUE_3 = (58, 95, 205)
ROYALBLUE_4 = (39, 64, 139)
SALMON = (250, 128, 114)
SALMON_1 = (255, 140, 105)
SALMON_2 = (238, 130, 98)
SALMON_3 = (205, 112, 84)
SALMON_4 = (139, 76, 57)
SANDYBROWN = (244, 164, 96)
SAPGREEN = (48, 128, 20)
SEAGREEN_1 = (84, 255, 159)
SEAGREEN_2 = (78, 238, 148)
SEAGREEN_3 = (67, 205, 128)
SEAGREEN_4__SEAGREEN_ = (46, 139, 87)
SEASHELL_1__SEASHELL_ = (255, 245, 238)
SEASHELL_2 = (238, 229, 222)
SEASHELL_3 = (205, 197, 191)
SEASHELL_4 = (139, 134, 130)
SEPIA = (94, 38, 18)
SGI_BEET = (142, 56, 142)
SGI_BRIGHTGRAY = (197, 193, 170)
SGI_CHARTREUSE = (113, 198, 113)
SGI_DARKGRAY = (85, 85, 85)
SGI_GRAY_12 = (30, 30, 30)
SGI_GRAY_16 = (40, 40, 40)
SGI_GRAY_32 = (81, 81, 81)
SGI_GRAY_36 = (91, 91, 91)
SGI_GRAY_52 = (132, 132, 132)
SGI_GRAY_56 = (142, 142, 142)
SGI_GRAY_72 = (183, 183, 183)
SGI_GRAY_76 = (193, 193, 193)
SGI_GRAY_92 = (234, 234, 234)
SGI_GRAY_96 = (244, 244, 244)
SGI_LIGHTBLUE = (125, 158, 192)
SGI_LIGHTGRAY = (170, 170, 170)
SGI_OLIVEDRAB = (142, 142, 56)
SGI_SALMON = (198, 113, 113)
SGI_SLATEBLUE = (113, 113, 198)
SGI_TEAL = (56, 142, 142)
SIENNA = (160, 82, 45)
SIENNA_1 = (255, 130, 71)
SIENNA_2 = (238, 121, 66)
SIENNA_3 = (205, 104, 57)
SIENNA_4 = (139, 71, 38)
SILVER = (192, 192, 192)
SKYBLUE = (135, 206, 235)
SKYBLUE_1 = (135, 206, 255)
SKYBLUE_2 = (126, 192, 238)
SKYBLUE_3 = (108, 166, 205)
SKYBLUE_4 = (74, 112, 139)
SLATEBLUE = (106, 90, 205)
SLATEBLUE_1 = (131, 111, 255)
SLATEBLUE_2 = (122, 103, 238)
SLATEBLUE_3 = (105, 89, 205)
SLATEBLUE_4 = (71, 60, 139)
SLATEGRAY = (112, 128, 144)
SLATEGRAY_1 = (198, 226, 255)
SLATEGRAY_2 = (185, 211, 238)
SLATEGRAY_3 = (159, 182, 205)
SLATEGRAY_4 = (108, 123, 139)
SNOW_1__SNOW_ = (255, 250, 250)
SNOW_2 = (238, 233, 233)
SNOW_3 = (205, 201, 201)
SNOW_4 = (139, 137, 137)
SPRINGGREEN = (0, 255, 127)
SPRINGGREEN_1 = (0, 238, 118)
SPRINGGREEN_2 = (0, 205, 102)
SPRINGGREEN_3 = (0, 139, 69)
STEELBLUE = (70, 130, 180)
STEELBLUE_1 = (99, 184, 255)
STEELBLUE_2 = (92, 172, 238)
STEELBLUE_3 = (79, 148, 205)
STEELBLUE_4 = (54, 100, 139)
TAN = (210, 180, 140)
TAN_1 = (255, 165, 79)
TAN_2 = (238, 154, 73)
TAN_3__PERU_ = (205, 133, 63)
TAN_4 = (139, 90, 43)
TEAL = (0, 128, 128)
THISTLE = (216, 191, 216)
THISTLE_1 = (255, 225, 255)
THISTLE_2 = (238, 210, 238)
THISTLE_3 = (205, 181, 205)
THISTLE_4 = (139, 123, 139)
TOMATO_1__TOMATO_ = (255, 99, 71)
TOMATO_2 = (238, 92, 66)
TOMATO_3 = (205, 79, 57)
TOMATO_4 = (139, 54, 38)
TURQUOISE = (64, 224, 208)
TURQUOISEBLUE = (0, 199, 140)
TURQUOISE_1 = (0, 245, 255)
TURQUOISE_2 = (0, 229, 238)
TURQUOISE_3 = (0, 197, 205)
TURQUOISE_4 = (0, 134, 139)
VIOLET = (238, 130, 238)
VIOLETRED = (208, 32, 144)
VIOLETRED_1 = (255, 62, 150)
VIOLETRED_2 = (238, 58, 140)
VIOLETRED_3 = (205, 50, 120)
VIOLETRED_4 = (139, 34, 82)
WARMGREY = (128, 128, 105)
WHEAT = (245, 222, 179)
WHEAT_1 = (255, 231, 186)
WHEAT_2 = (238, 216, 174)
WHEAT_3 = (205, 186, 150)
WHEAT_4 = (139, 126, 102)
WHITE_SMOKE__GRAY_96_ = (245, 245, 245)
YELLOW_1__YELLOW_ = (255, 255, 0)
YELLOW_2 = (238, 238, 0)
YELLOW_3 = (205, 205, 0)
YELLOW_4 = (139, 139, 0)

colour_values_list = [
    WILDERNESS_MINT,
    BWS_RED,
    BWS_BLACK,
    BWS_GREY,
    STARGATE_BLUE,
    BLACK,
    WHITE,
    DARK_GRAY,
    LIGHT_GRAY,
    RED,
    GREEN,
    BLUE,
    ALICEBLUE,
    ANTIQUEWHITE,
    ANTIQUEWHITE_1,
    ANTIQUEWHITE_2,
    ANTIQUEWHITE_3,
    ANTIQUEWHITE_4,
    AQUAMARINE_1__AQUAMARINE_,
    AQUAMARINE_2,
    AQUAMARINE_3__MEDIUMAQUAMARINE_,
    AQUAMARINE_4,
    AZURE_1__AZURE_,
    AZURE_2,
    AZURE_3,
    AZURE_4,
    BANANA,
    BEIGE,
    BISQUE_1__BISQUE_,
    BISQUE_2,
    BISQUE_3,
    BISQUE_4,
    BLACK,
    BLANCHEDALMOND,
    BLUE,
    BLUEVIOLET,
    BLUE_2,
    BLUE_3__MEDIUMBLUE_,
    BLUE_4__DARKBLUE_,
    BRICK,
    BROWN,
    BROWN_1,
    BROWN_2,
    BROWN_3,
    BROWN_4,
    BURLYWOOD,
    BURLYWOOD_1,
    BURLYWOOD_2,
    BURLYWOOD_3,
    BURLYWOOD_4,
    BURNTSIENNA,
    BURNTUMBER,
    CADETBLUE,
    CADETBLUE_1,
    CADETBLUE_2,
    CADETBLUE_3,
    CADETBLUE_4,
    CADMIUMORANGE,
    CADMIUMYELLOW,
    CARROT,
    CHARTREUSE_1__CHARTREUSE_,
    CHARTREUSE_2,
    CHARTREUSE_3,
    CHARTREUSE_4,
    CHOCOLATE,
    CHOCOLATE_1,
    CHOCOLATE_2,
    CHOCOLATE_3,
    CHOCOLATE_4__SADDLEBROWN_,
    COBALT,
    COBALTGREEN,
    COLDGREY,
    CORAL,
    CORAL_1,
    CORAL_2,
    CORAL_3,
    CORAL_4,
    CORNFLOWERBLUE,
    CORNSILK_1__CORNSILK_,
    CORNSILK_2,
    CORNSILK_3,
    CORNSILK_4,
    CRIMSON,
    CYAN_2,
    CYAN_3,
    CYAN_4__DARKCYAN_,
    CYAN__AQUA,
    DARKGOLDENROD,
    DARKGOLDENROD_1,
    DARKGOLDENROD_2,
    DARKGOLDENROD_3,
    DARKGOLDENROD_4,
    DARKGRAY,
    DARKGREEN,
    DARKKHAKI,
    DARKOLIVEGREEN,
    DARKOLIVEGREEN_1,
    DARKOLIVEGREEN_2,
    DARKOLIVEGREEN_3,
    DARKOLIVEGREEN_4,
    DARKORANGE,
    DARKORANGE_1,
    DARKORANGE_2,
    DARKORANGE_3,
    DARKORANGE_4,
    DARKORCHID,
    DARKORCHID_1,
    DARKORCHID_2,
    DARKORCHID_3,
    DARKORCHID_4,
    DARKSALMON,
    DARKSEAGREEN,
    DARKSEAGREEN_1,
    DARKSEAGREEN_2,
    DARKSEAGREEN_3,
    DARKSEAGREEN_4,
    DARKSLATEBLUE,
    DARKSLATEGRAY,
    DARKSLATEGRAY_1,
    DARKSLATEGRAY_2,
    DARKSLATEGRAY_3,
    DARKSLATEGRAY_4,
    DARKTURQUOISE,
    DARKVIOLET,
    DEEPPINK_1__DEEPPINK_,
    DEEPPINK_2,
    DEEPPINK_3,
    DEEPPINK_4,
    DEEPSKYBLUE_1__DEEPSKYBLUE_,
    DEEPSKYBLUE_2,
    DEEPSKYBLUE_3,
    DEEPSKYBLUE_4,
    DIMGRAY__GRAY_42_,
    DIMGRAY__GRAY_42_,
    DODGERBLUE_1__DODGERBLUE_,
    DODGERBLUE_2,
    DODGERBLUE_3,
    DODGERBLUE_4,
    EGGSHELL,
    EMERALDGREEN,
    FIREBRICK,
    FIREBRICK_1,
    FIREBRICK_2,
    FIREBRICK_3,
    FIREBRICK_4,
    FLESH,
    FLORALWHITE,
    FORESTGREEN,
    GAINSBORO,
    GHOSTWHITE,
    GOLDENROD,
    GOLDENROD_1,
    GOLDENROD_2,
    GOLDENROD_3,
    GOLDENROD_4,
    GOLD_1__GOLD_,
    GOLD_2,
    GOLD_3,
    GOLD_4,
    GRAY,
    GRAY_1,
    GRAY_10,
    GRAY_11,
    GRAY_12,
    GRAY_13,
    GRAY_14,
    GRAY_15,
    GRAY_16,
    GRAY_17,
    GRAY_18,
    GRAY_19,
    GRAY_2,
    GRAY_20,
    GRAY_21,
    GRAY_22,
    GRAY_23,
    GRAY_24,
    GRAY_25,
    GRAY_26,
    GRAY_27,
    GRAY_28,
    GRAY_29,
    GRAY_3,
    GRAY_30,
    GRAY_31,
    GRAY_32,
    GRAY_33,
    GRAY_34,
    GRAY_35,
    GRAY_36,
    GRAY_37,
    GRAY_38,
    GRAY_39,
    GRAY_4,
    GRAY_40,
    GRAY_42,
    GRAY_43,
    GRAY_44,
    GRAY_45,
    GRAY_46,
    GRAY_47,
    GRAY_48,
    GRAY_49,
    GRAY_5,
    GRAY_50,
    GRAY_51,
    GRAY_52,
    GRAY_53,
    GRAY_54,
    GRAY_55,
    GRAY_56,
    GRAY_57,
    GRAY_58,
    GRAY_59,
    GRAY_6,
    GRAY_60,
    GRAY_61,
    GRAY_62,
    GRAY_63,
    GRAY_64,
    GRAY_65,
    GRAY_66,
    GRAY_67,
    GRAY_68,
    GRAY_69,
    GRAY_7,
    GRAY_70,
    GRAY_71,
    GRAY_72,
    GRAY_73,
    GRAY_74,
    GRAY_75,
    GRAY_76,
    GRAY_77,
    GRAY_78,
    GRAY_79,
    GRAY_8,
    GRAY_80,
    GRAY_81,
    GRAY_82,
    GRAY_83,
    GRAY_84,
    GRAY_85,
    GRAY_86,
    GRAY_87,
    GRAY_88,
    GRAY_89,
    GRAY_9,
    GRAY_90,
    GRAY_91,
    GRAY_92,
    GRAY_93,
    GRAY_94,
    GRAY_95,
    GRAY_97,
    GRAY_98,
    GRAY_99,
    GREEN,
    GREENYELLOW,
    GREEN_1__LIME_,
    GREEN_2,
    GREEN_3,
    GREEN_4,
    HONEYDEW_1__HONEYDEW_,
    HONEYDEW_2,
    HONEYDEW_3,
    HONEYDEW_4,
    HOTPINK,
    HOTPINK_1,
    HOTPINK_2,
    HOTPINK_3,
    HOTPINK_4,
    INDIANRED,
    INDIANRED_1,
    INDIANRED_2,
    INDIANRED_3,
    INDIANRED_4,
    INDIAN_RED,
    INDIGO,
    IVORYBLACK,
    IVORY_1__IVORY_,
    IVORY_2,
    IVORY_3,
    IVORY_4,
    KHAKI,
    KHAKI_1,
    KHAKI_2,
    KHAKI_3,
    KHAKI_4,
    LAVENDER,
    LAVENDERBLUSH_1__LAVENDERBLUSH_,
    LAVENDERBLUSH_2,
    LAVENDERBLUSH_3,
    LAVENDERBLUSH_4,
    LAWNGREEN,
    LEMONCHIFFON_1__LEMONCHIFFON_,
    LEMONCHIFFON_2,
    LEMONCHIFFON_3,
    LEMONCHIFFON_4,
    LIGHTBLUE,
    LIGHTBLUE_1,
    LIGHTBLUE_2,
    LIGHTBLUE_3,
    LIGHTBLUE_4,
    LIGHTCORAL,
    LIGHTCYAN_1__LIGHTCYAN_,
    LIGHTCYAN_2,
    LIGHTCYAN_3,
    LIGHTCYAN_4,
    LIGHTGOLDENRODYELLOW,
    LIGHTGOLDENROD_1,
    LIGHTGOLDENROD_2,
    LIGHTGOLDENROD_3,
    LIGHTGOLDENROD_4,
    LIGHTGREY,
    LIGHTPINK,
    LIGHTPINK_1,
    LIGHTPINK_2,
    LIGHTPINK_3,
    LIGHTPINK_4,
    LIGHTSALMON_1__LIGHTSALMON_,
    LIGHTSALMON_2,
    LIGHTSALMON_3,
    LIGHTSALMON_4,
    LIGHTSEAGREEN,
    LIGHTSKYBLUE,
    LIGHTSKYBLUE_1,
    LIGHTSKYBLUE_2,
    LIGHTSKYBLUE_3,
    LIGHTSKYBLUE_4,
    LIGHTSLATEBLUE,
    LIGHTSLATEGRAY,
    LIGHTSTEELBLUE,
    LIGHTSTEELBLUE_1,
    LIGHTSTEELBLUE_2,
    LIGHTSTEELBLUE_3,
    LIGHTSTEELBLUE_4,
    LIGHTYELLOW_1__LIGHTYELLOW_,
    LIGHTYELLOW_2,
    LIGHTYELLOW_3,
    LIGHTYELLOW_4,
    LIMEGREEN,
    LINEN,
    MAGENTA_2,
    MAGENTA_3,
    MAGENTA_4__DARKMAGENTA_,
    MAGENTA__FUCHSIA_,
    MANGANESEBLUE,
    MAROON,
    MAROON_1,
    MAROON_2,
    MAROON_3,
    MAROON_4,
    MEDIUMORCHID,
    MEDIUMORCHID_1,
    MEDIUMORCHID_2,
    MEDIUMORCHID_3,
    MEDIUMORCHID_4,
    MEDIUMPURPLE,
    MEDIUMPURPLE_1,
    MEDIUMPURPLE_2,
    MEDIUMPURPLE_3,
    MEDIUMPURPLE_4,
    MEDIUMSEAGREEN,
    MEDIUMSLATEBLUE,
    MEDIUMSPRINGGREEN,
    MEDIUMTURQUOISE,
    MEDIUMVIOLETRED,
    MELON,
    MIDNIGHTBLUE,
    MINT,
    MINTCREAM,
    MISTYROSE_1__MISTYROSE_,
    MISTYROSE_2,
    MISTYROSE_3,
    MISTYROSE_4,
    MOCCASIN,
    NAVAJOWHITE_1__NAVAJOWHITE_,
    NAVAJOWHITE_2,
    NAVAJOWHITE_3,
    NAVAJOWHITE_4,
    NAVY,
    OLDLACE,
    OLIVE,
    OLIVEDRAB,
    OLIVEDRAB_1,
    OLIVEDRAB_2,
    OLIVEDRAB_3__YELLOWGREEN_,
    OLIVEDRAB_4,
    ORANGE,
    ORANGERED_1__ORANGERED_,
    ORANGERED_2,
    ORANGERED_3,
    ORANGERED_4,
    ORANGE_1__ORANGE_,
    ORANGE_2,
    ORANGE_3,
    ORANGE_4,
    ORCHID,
    ORCHID_1,
    ORCHID_2,
    ORCHID_3,
    ORCHID_4,
    PALEGOLDENROD,
    PALEGREEN,
    PALEGREEN_1,
    PALEGREEN_2__LIGHTGREEN_,
    PALEGREEN_3,
    PALEGREEN_4,
    PALETURQUOISE_1,
    PALETURQUOISE_2__PALETURQUOISE_,
    PALETURQUOISE_3,
    PALETURQUOISE_4,
    PALEVIOLETRED,
    PALEVIOLETRED_1,
    PALEVIOLETRED_2,
    PALEVIOLETRED_3,
    PALEVIOLETRED_4,
    PAPAYAWHIP,
    PEACHPUFF_1__PEACHPUFF_,
    PEACHPUFF_2,
    PEACHPUFF_3,
    PEACHPUFF_4,
    PEACOCK,
    PINK,
    PINK_1,
    PINK_2,
    PINK_3,
    PINK_4,
    PLUM,
    PLUM_1,
    PLUM_2,
    PLUM_3,
    PLUM_4,
    POWDERBLUE,
    PURPLE,
    PURPLE_1,
    PURPLE_2,
    PURPLE_3,
    PURPLE_4,
    RASPBERRY,
    RAWSIENNA,
    RED_1__RED_,
    RED_2,
    RED_3,
    RED_4__DARKRED_,
    ROSYBROWN,
    ROSYBROWN_1,
    ROSYBROWN_2,
    ROSYBROWN_3,
    ROSYBROWN_4,
    ROYALBLUE,
    ROYALBLUE_1,
    ROYALBLUE_2,
    ROYALBLUE_3,
    ROYALBLUE_4,
    SALMON,
    SALMON_1,
    SALMON_2,
    SALMON_3,
    SALMON_4,
    SANDYBROWN,
    SAPGREEN,
    SEAGREEN_1,
    SEAGREEN_2,
    SEAGREEN_3,
    SEAGREEN_4__SEAGREEN_,
    SEASHELL_1__SEASHELL_,
    SEASHELL_2,
    SEASHELL_3,
    SEASHELL_4,
    SEPIA,
    SGI_BEET,
    SGI_BRIGHTGRAY,
    SGI_CHARTREUSE,
    SGI_DARKGRAY,
    SGI_GRAY_12,
    SGI_GRAY_16,
    SGI_GRAY_32,
    SGI_GRAY_36,
    SGI_GRAY_52,
    SGI_GRAY_56,
    SGI_GRAY_72,
    SGI_GRAY_76,
    SGI_GRAY_92,
    SGI_GRAY_96,
    SGI_LIGHTBLUE,
    SGI_LIGHTGRAY,
    SGI_OLIVEDRAB,
    SGI_SALMON,
    SGI_SLATEBLUE,
    SGI_TEAL,
    SIENNA,
    SIENNA_1,
    SIENNA_2,
    SIENNA_3,
    SIENNA_4,
    SILVER,
    SKYBLUE,
    SKYBLUE_1,
    SKYBLUE_2,
    SKYBLUE_3,
    SKYBLUE_4,
    SLATEBLUE,
    SLATEBLUE_1,
    SLATEBLUE_2,
    SLATEBLUE_3,
    SLATEBLUE_4,
    SLATEGRAY,
    SLATEGRAY_1,
    SLATEGRAY_2,
    SLATEGRAY_3,
    SLATEGRAY_4,
    SNOW_1__SNOW_,
    SNOW_2,
    SNOW_3,
    SNOW_4,
    SPRINGGREEN,
    SPRINGGREEN_1,
    SPRINGGREEN_2,
    SPRINGGREEN_3,
    STEELBLUE,
    STEELBLUE_1,
    STEELBLUE_2,
    STEELBLUE_3,
    STEELBLUE_4,
    TAN,
    TAN_1,
    TAN_2,
    TAN_3__PERU_,
    TAN_4,
    TEAL,
    THISTLE,
    THISTLE_1,
    THISTLE_2,
    THISTLE_3,
    THISTLE_4,
    TOMATO_1__TOMATO_,
    TOMATO_2,
    TOMATO_3,
    TOMATO_4,
    TURQUOISE,
    TURQUOISEBLUE,
    TURQUOISE_1,
    TURQUOISE_2,
    TURQUOISE_3,
    TURQUOISE_4,
    VIOLET,
    VIOLETRED,
    VIOLETRED_1,
    VIOLETRED_2,
    VIOLETRED_3,
    VIOLETRED_4,
    WARMGREY,
    WHEAT,
    WHEAT_1,
    WHEAT_2,
    WHEAT_3,
    WHEAT_4,
    WHITE,
    WHITE_SMOKE__GRAY_96_,
    WHITE_SMOKE__GRAY_96_,
    YELLOW_1__YELLOW_,
    YELLOW_2,
    YELLOW_3,
    YELLOW_4
]

colour_names_list = [
    "WILDERNESS_MINT",
    "BWS_RED",
    "BWS_BLACK",
    "BWS_GREY",
    "STARGATE_BLUE",
    "BLACK",
    "WHITE",
    "DARK_GRAY",
    "LIGHT_GRAY",
    "RED",
    "GREEN",
    "BLUE",
    "ALICEBLUE",
    "ANTIQUEWHITE",
    "ANTIQUEWHITE_1",
    "ANTIQUEWHITE_2",
    "ANTIQUEWHITE_3",
    "ANTIQUEWHITE_4",
    "AQUAMARINE_1__AQUAMARINE_",
    "AQUAMARINE_2",
    "AQUAMARINE_3__MEDIUMAQUAMARINE_",
    "AQUAMARINE_4",
    "AZURE_1__AZURE_",
    "AZURE_2",
    "AZURE_3",
    "AZURE_4",
    "BANANA",
    "BEIGE",
    "BISQUE_1__BISQUE_",
    "BISQUE_2",
    "BISQUE_3",
    "BISQUE_4",
    "BLACK",
    "BLANCHEDALMOND",
    "BLUE",
    "BLUEVIOLET",
    "BLUE_2",
    "BLUE_3__MEDIUMBLUE_",
    "BLUE_4__DARKBLUE_",
    "BRICK",
    "BROWN",
    "BROWN_1",
    "BROWN_2",
    "BROWN_3",
    "BROWN_4",
    "BURLYWOOD",
    "BURLYWOOD_1",
    "BURLYWOOD_2",
    "BURLYWOOD_3",
    "BURLYWOOD_4",
    "BURNTSIENNA",
    "BURNTUMBER",
    "CADETBLUE",
    "CADETBLUE_1",
    "CADETBLUE_2",
    "CADETBLUE_3",
    "CADETBLUE_4",
    "CADMIUMORANGE",
    "CADMIUMYELLOW",
    "CARROT",
    "CHARTREUSE_1__CHARTREUSE_",
    "CHARTREUSE_2",
    "CHARTREUSE_3",
    "CHARTREUSE_4",
    "CHOCOLATE",
    "CHOCOLATE_1",
    "CHOCOLATE_2",
    "CHOCOLATE_3",
    "CHOCOLATE_4__SADDLEBROWN_",
    "COBALT",
    "COBALTGREEN",
    "COLDGREY",
    "CORAL",
    "CORAL_1",
    "CORAL_2",
    "CORAL_3",
    "CORAL_4",
    "CORNFLOWERBLUE",
    "CORNSILK_1__CORNSILK_",
    "CORNSILK_2",
    "CORNSILK_3",
    "CORNSILK_4",
    "CRIMSON",
    "CYAN_2",
    "CYAN_3",
    "CYAN_4__DARKCYAN_",
    "CYAN__AQUA",
    "DARKGOLDENROD",
    "DARKGOLDENROD_1",
    "DARKGOLDENROD_2",
    "DARKGOLDENROD_3",
    "DARKGOLDENROD_4",
    "DARKGRAY",
    "DARKGREEN",
    "DARKKHAKI",
    "DARKOLIVEGREEN",
    "DARKOLIVEGREEN_1",
    "DARKOLIVEGREEN_2",
    "DARKOLIVEGREEN_3",
    "DARKOLIVEGREEN_4",
    "DARKORANGE",
    "DARKORANGE_1",
    "DARKORANGE_2",
    "DARKORANGE_3",
    "DARKORANGE_4",
    "DARKORCHID",
    "DARKORCHID_1",
    "DARKORCHID_2",
    "DARKORCHID_3",
    "DARKORCHID_4",
    "DARKSALMON",
    "DARKSEAGREEN",
    "DARKSEAGREEN_1",
    "DARKSEAGREEN_2",
    "DARKSEAGREEN_3",
    "DARKSEAGREEN_4",
    "DARKSLATEBLUE",
    "DARKSLATEGRAY",
    "DARKSLATEGRAY_1",
    "DARKSLATEGRAY_2",
    "DARKSLATEGRAY_3",
    "DARKSLATEGRAY_4",
    "DARKTURQUOISE",
    "DARKVIOLET",
    "DEEPPINK_1__DEEPPINK_",
    "DEEPPINK_2",
    "DEEPPINK_3",
    "DEEPPINK_4",
    "DEEPSKYBLUE_1__DEEPSKYBLUE_",
    "DEEPSKYBLUE_2",
    "DEEPSKYBLUE_3",
    "DEEPSKYBLUE_4",
    "DIMGRAY__GRAY_42_",
    "DIMGRAY__GRAY_42_",
    "DODGERBLUE_1__DODGERBLUE_",
    "DODGERBLUE_2",
    "DODGERBLUE_3",
    "DODGERBLUE_4",
    "EGGSHELL",
    "EMERALDGREEN",
    "FIREBRICK",
    "FIREBRICK_1",
    "FIREBRICK_2",
    "FIREBRICK_3",
    "FIREBRICK_4",
    "FLESH",
    "FLORALWHITE",
    "FORESTGREEN",
    "GAINSBORO",
    "GHOSTWHITE",
    "GOLDENROD",
    "GOLDENROD_1",
    "GOLDENROD_2",
    "GOLDENROD_3",
    "GOLDENROD_4",
    "GOLD_1__GOLD_",
    "GOLD_2",
    "GOLD_3",
    "GOLD_4",
    "GRAY",
    "GRAY_1",
    "GRAY_10",
    "GRAY_11",
    "GRAY_12",
    "GRAY_13",
    "GRAY_14",
    "GRAY_15",
    "GRAY_16",
    "GRAY_17",
    "GRAY_18",
    "GRAY_19",
    "GRAY_2",
    "GRAY_20",
    "GRAY_21",
    "GRAY_22",
    "GRAY_23",
    "GRAY_24",
    "GRAY_25",
    "GRAY_26",
    "GRAY_27",
    "GRAY_28",
    "GRAY_29",
    "GRAY_3",
    "GRAY_30",
    "GRAY_31",
    "GRAY_32",
    "GRAY_33",
    "GRAY_34",
    "GRAY_35",
    "GRAY_36",
    "GRAY_37",
    "GRAY_38",
    "GRAY_39",
    "GRAY_4",
    "GRAY_40",
    "GRAY_42",
    "GRAY_43",
    "GRAY_44",
    "GRAY_45",
    "GRAY_46",
    "GRAY_47",
    "GRAY_48",
    "GRAY_49",
    "GRAY_5",
    "GRAY_50",
    "GRAY_51",
    "GRAY_52",
    "GRAY_53",
    "GRAY_54",
    "GRAY_55",
    "GRAY_56",
    "GRAY_57",
    "GRAY_58",
    "GRAY_59",
    "GRAY_6",
    "GRAY_60",
    "GRAY_61",
    "GRAY_62",
    "GRAY_63",
    "GRAY_64",
    "GRAY_65",
    "GRAY_66",
    "GRAY_67",
    "GRAY_68",
    "GRAY_69",
    "GRAY_7",
    "GRAY_70",
    "GRAY_71",
    "GRAY_72",
    "GRAY_73",
    "GRAY_74",
    "GRAY_75",
    "GRAY_76",
    "GRAY_77",
    "GRAY_78",
    "GRAY_79",
    "GRAY_8",
    "GRAY_80",
    "GRAY_81",
    "GRAY_82",
    "GRAY_83",
    "GRAY_84",
    "GRAY_85",
    "GRAY_86",
    "GRAY_87",
    "GRAY_88",
    "GRAY_89",
    "GRAY_9",
    "GRAY_90",
    "GRAY_91",
    "GRAY_92",
    "GRAY_93",
    "GRAY_94",
    "GRAY_95",
    "GRAY_97",
    "GRAY_98",
    "GRAY_99",
    "GREEN",
    "GREENYELLOW",
    "GREEN_1__LIME_",
    "GREEN_2",
    "GREEN_3",
    "GREEN_4",
    "HONEYDEW_1__HONEYDEW_",
    "HONEYDEW_2",
    "HONEYDEW_3",
    "HONEYDEW_4",
    "HOTPINK",
    "HOTPINK_1",
    "HOTPINK_2",
    "HOTPINK_3",
    "HOTPINK_4",
    "INDIANRED",
    "INDIANRED_1",
    "INDIANRED_2",
    "INDIANRED_3",
    "INDIANRED_4",
    "INDIAN_RED",
    "INDIGO",
    "IVORYBLACK",
    "IVORY_1__IVORY_",
    "IVORY_2",
    "IVORY_3",
    "IVORY_4",
    "KHAKI",
    "KHAKI_1",
    "KHAKI_2",
    "KHAKI_3",
    "KHAKI_4",
    "LAVENDER",
    "LAVENDERBLUSH_1__LAVENDERBLUSH_",
    "LAVENDERBLUSH_2",
    "LAVENDERBLUSH_3",
    "LAVENDERBLUSH_4",
    "LAWNGREEN",
    "LEMONCHIFFON_1__LEMONCHIFFON_",
    "LEMONCHIFFON_2",
    "LEMONCHIFFON_3",
    "LEMONCHIFFON_4",
    "LIGHTBLUE",
    "LIGHTBLUE_1",
    "LIGHTBLUE_2",
    "LIGHTBLUE_3",
    "LIGHTBLUE_4",
    "LIGHTCORAL",
    "LIGHTCYAN_1__LIGHTCYAN_",
    "LIGHTCYAN_2",
    "LIGHTCYAN_3",
    "LIGHTCYAN_4",
    "LIGHTGOLDENRODYELLOW",
    "LIGHTGOLDENROD_1",
    "LIGHTGOLDENROD_2",
    "LIGHTGOLDENROD_3",
    "LIGHTGOLDENROD_4",
    "LIGHTGREY",
    "LIGHTPINK",
    "LIGHTPINK_1",
    "LIGHTPINK_2",
    "LIGHTPINK_3",
    "LIGHTPINK_4",
    "LIGHTSALMON_1__LIGHTSALMON_",
    "LIGHTSALMON_2",
    "LIGHTSALMON_3",
    "LIGHTSALMON_4",
    "LIGHTSEAGREEN",
    "LIGHTSKYBLUE",
    "LIGHTSKYBLUE_1",
    "LIGHTSKYBLUE_2",
    "LIGHTSKYBLUE_3",
    "LIGHTSKYBLUE_4",
    "LIGHTSLATEBLUE",
    "LIGHTSLATEGRAY",
    "LIGHTSTEELBLUE",
    "LIGHTSTEELBLUE_1",
    "LIGHTSTEELBLUE_2",
    "LIGHTSTEELBLUE_3",
    "LIGHTSTEELBLUE_4",
    "LIGHTYELLOW_1__LIGHTYELLOW_",
    "LIGHTYELLOW_2",
    "LIGHTYELLOW_3",
    "LIGHTYELLOW_4",
    "LIMEGREEN",
    "LINEN",
    "MAGENTA_2",
    "MAGENTA_3",
    "MAGENTA_4__DARKMAGENTA_",
    "MAGENTA__FUCHSIA_",
    "MANGANESEBLUE",
    "MAROON",
    "MAROON_1",
    "MAROON_2",
    "MAROON_3",
    "MAROON_4",
    "MEDIUMORCHID",
    "MEDIUMORCHID_1",
    "MEDIUMORCHID_2",
    "MEDIUMORCHID_3",
    "MEDIUMORCHID_4",
    "MEDIUMPURPLE",
    "MEDIUMPURPLE_1",
    "MEDIUMPURPLE_2",
    "MEDIUMPURPLE_3",
    "MEDIUMPURPLE_4",
    "MEDIUMSEAGREEN",
    "MEDIUMSLATEBLUE",
    "MEDIUMSPRINGGREEN",
    "MEDIUMTURQUOISE",
    "MEDIUMVIOLETRED",
    "MELON",
    "MIDNIGHTBLUE",
    "MINT",
    "MINTCREAM",
    "MISTYROSE_1__MISTYROSE_",
    "MISTYROSE_2",
    "MISTYROSE_3",
    "MISTYROSE_4",
    "MOCCASIN",
    "NAVAJOWHITE_1__NAVAJOWHITE_",
    "NAVAJOWHITE_2",
    "NAVAJOWHITE_3",
    "NAVAJOWHITE_4",
    "NAVY",
    "OLDLACE",
    "OLIVE",
    "OLIVEDRAB",
    "OLIVEDRAB_1",
    "OLIVEDRAB_2",
    "OLIVEDRAB_3__YELLOWGREEN_",
    "OLIVEDRAB_4",
    "ORANGE",
    "ORANGERED_1__ORANGERED_",
    "ORANGERED_2",
    "ORANGERED_3",
    "ORANGERED_4",
    "ORANGE_1__ORANGE_",
    "ORANGE_2",
    "ORANGE_3",
    "ORANGE_4",
    "ORCHID",
    "ORCHID_1",
    "ORCHID_2",
    "ORCHID_3",
    "ORCHID_4",
    "PALEGOLDENROD",
    "PALEGREEN",
    "PALEGREEN_1",
    "PALEGREEN_2__LIGHTGREEN_",
    "PALEGREEN_3",
    "PALEGREEN_4",
    "PALETURQUOISE_1",
    "PALETURQUOISE_2__PALETURQUOISE_",
    "PALETURQUOISE_3",
    "PALETURQUOISE_4",
    "PALEVIOLETRED",
    "PALEVIOLETRED_1",
    "PALEVIOLETRED_2",
    "PALEVIOLETRED_3",
    "PALEVIOLETRED_4",
    "PAPAYAWHIP",
    "PEACHPUFF_1__PEACHPUFF_",
    "PEACHPUFF_2",
    "PEACHPUFF_3",
    "PEACHPUFF_4",
    "PEACOCK",
    "PINK",
    "PINK_1",
    "PINK_2",
    "PINK_3",
    "PINK_4",
    "PLUM",
    "PLUM_1",
    "PLUM_2",
    "PLUM_3",
    "PLUM_4",
    "POWDERBLUE",
    "PURPLE",
    "PURPLE_1",
    "PURPLE_2",
    "PURPLE_3",
    "PURPLE_4",
    "RASPBERRY",
    "RAWSIENNA",
    "RED_1__RED_",
    "RED_2",
    "RED_3",
    "RED_4__DARKRED_",
    "ROSYBROWN",
    "ROSYBROWN_1",
    "ROSYBROWN_2",
    "ROSYBROWN_3",
    "ROSYBROWN_4",
    "ROYALBLUE",
    "ROYALBLUE_1",
    "ROYALBLUE_2",
    "ROYALBLUE_3",
    "ROYALBLUE_4",
    "SALMON",
    "SALMON_1",
    "SALMON_2",
    "SALMON_3",
    "SALMON_4",
    "SANDYBROWN",
    "SAPGREEN",
    "SEAGREEN_1",
    "SEAGREEN_2",
    "SEAGREEN_3",
    "SEAGREEN_4__SEAGREEN_",
    "SEASHELL_1__SEASHELL_",
    "SEASHELL_2",
    "SEASHELL_3",
    "SEASHELL_4",
    "SEPIA",
    "SGI_BEET",
    "SGI_BRIGHTGRAY",
    "SGI_CHARTREUSE",
    "SGI_DARKGRAY",
    "SGI_GRAY_12",
    "SGI_GRAY_16",
    "SGI_GRAY_32",
    "SGI_GRAY_36",
    "SGI_GRAY_52",
    "SGI_GRAY_56",
    "SGI_GRAY_72",
    "SGI_GRAY_76",
    "SGI_GRAY_92",
    "SGI_GRAY_96",
    "SGI_LIGHTBLUE",
    "SGI_LIGHTGRAY",
    "SGI_OLIVEDRAB",
    "SGI_SALMON",
    "SGI_SLATEBLUE",
    "SGI_TEAL",
    "SIENNA",
    "SIENNA_1",
    "SIENNA_2",
    "SIENNA_3",
    "SIENNA_4",
    "SILVER",
    "SKYBLUE",
    "SKYBLUE_1",
    "SKYBLUE_2",
    "SKYBLUE_3",
    "SKYBLUE_4",
    "SLATEBLUE",
    "SLATEBLUE_1",
    "SLATEBLUE_2",
    "SLATEBLUE_3",
    "SLATEBLUE_4",
    "SLATEGRAY",
    "SLATEGRAY_1",
    "SLATEGRAY_2",
    "SLATEGRAY_3",
    "SLATEGRAY_4",
    "SNOW_1__SNOW_",
    "SNOW_2",
    "SNOW_3",
    "SNOW_4",
    "SPRINGGREEN",
    "SPRINGGREEN_1",
    "SPRINGGREEN_2",
    "SPRINGGREEN_3",
    "STEELBLUE",
    "STEELBLUE_1",
    "STEELBLUE_2",
    "STEELBLUE_3",
    "STEELBLUE_4",
    "TAN",
    "TAN_1",
    "TAN_2",
    "TAN_3__PERU_",
    "TAN_4",
    "TEAL",
    "THISTLE",
    "THISTLE_1",
    "THISTLE_2",
    "THISTLE_3",
    "THISTLE_4",
    "TOMATO_1__TOMATO_",
    "TOMATO_2",
    "TOMATO_3",
    "TOMATO_4",
    "TURQUOISE",
    "TURQUOISEBLUE",
    "TURQUOISE_1",
    "TURQUOISE_2",
    "TURQUOISE_3",
    "TURQUOISE_4",
    "VIOLET",
    "VIOLETRED",
    "VIOLETRED_1",
    "VIOLETRED_2",
    "VIOLETRED_3",
    "VIOLETRED_4",
    "WARMGREY",
    "WHEAT",
    "WHEAT_1",
    "WHEAT_2",
    "WHEAT_3",
    "WHEAT_4",
    "WHITE",
    "WHITE_SMOKE__GRAY_96_",
    "WHITE_SMOKE__GRAY_96_",
    "YELLOW_1__YELLOW_",
    "YELLOW_2",
    "YELLOW_3",
    "YELLOW_4"
]


def rgb_to_hex(colour):
    if is_hex_colour(colour):
        return colour
    r, g, b = None, None, None
    try:
        r, g, b = colour
        return "#{}{}{}".format(*list(map(lambda x: hex(int(x) % 256)[2:].rjust(2, "0"), [r, g, b]))).upper()
    except ValueError:
        raise ValueError("Failed to convert r: {}, g: {}, b: {} values to a hex colour.".format(r, g, b))
    except TypeError:
        raise TypeError("Failed to convert r: {}, g: {}, b: {} values to a hex colour.".format(r, g, b))


def hex_to_rgb(colour):
    if is_rgb_colour(colour):
        return colour
    try:
        return (int(colour[1:3], 16), int(colour[3:5], 16), int(colour[5:], 16))
    except ValueError:
        raise ValueError("Failed to convert colour: {} to a valid RGB colour.".format(colour))
    except TypeError:
        raise TypeError("Failed to convert colour: {} to a valid RGB colour.".format(colour))


def is_rgb_colour(c, g=None, b=None):
    if g is not None and b is not None:
        if isinstance(c, list):
            c = c + [g, b]
        elif isinstance(c, tuple):
            c = (*c, g, b)
        elif isinstance(c, int) or isinstance(c, float):
            c = [c] + [g, b]
    if (isinstance(c, tuple) or isinstance(c, list)) and len(c) == 3:
        if all([(isinstance(x, int) or isinstance(x, float)) and -1 < x < 256 for x in c]):
            return True
    return False


def is_hex_colour(c):
    if isinstance(c, str) and (len(c) == 7 or len(c) == 6):
        if len(c) == 7:
            if c[0] != "#":
                return False
            c = c[1:]
        valid = list(map(str, range(10))) + [chr(97 + x) for x in range(6)] + [chr(65 + x) for x in range(6)]
        for i in c:
            if i not in valid:
                return False
        return True
    return False


# COLOURS = dict(zip(colour_names_list, colour_values_list))
COLOURS = dict(zip(colour_names_list, [{"R": r, "G": g, "B": b} for r, g, b in colour_values_list]))
COLOURS_INVERSE = dict(zip([rgb_to_hex(rgb) for rgb in colour_values_list], colour_names_list))


def get_all_colours(rtype=list, return_hex=False):
    if return_hex:
        lst = [rgb_to_hex(c) for c in colour_values_list]
    else:
        lst = colour_values_list

    if rtype == dict:
        return dict(zip(colour_names_list, lst))
    elif isinstance(rtype, str) and rtype.lower() == "both":
        return colour_names_list, lst
    elif isinstance(rtype, str) and rtype.lower() == "names":
        return colour_names_list
    else:
        return lst


def random_colour(name=False, rgb=True):
    """Choose a random colour from the list of known colours."""
    if not name:
        if rgb:
            return choice(get_all_colours())
        else:
            return rgb_to_hex(choice(get_all_colours()))
    else:
        return choice(list(get_all_colours(rtype=dict).keys()))


def random_rgb(l_bound=10, h_bound=245):
    """Return random RGB color using bounds."""
    l_bound = clamp(0, l_bound, 255)
    h_bound = clamp(l_bound, h_bound, 255)
    return (
        randint(l_bound, h_bound),
        randint(l_bound, h_bound),
        randint(l_bound, h_bound)
    )



# def rgb_to_hex(colour):
#    return "#" + "".join([hex(x).split("x")[-1] for x in colour]).upper()


# def iscolour(c, g=None, b=None):
#     print("c: <{}>, t: <{}>".format(c, type(c)))
#     print("c: <{}>, t: <{}>".format(g, type(g)))
#     print("c: <{}>, t: <{}>".format(b, type(b)))
#     if g is not None and b is not None:
#         if isinstance(c, list):
#             c = c + [g, b]
#         elif isinstance(c, tuple):
#             c = (*c, g, b)
#         elif isinstance(c, int) or isinstance(c, float):
#             c = [c] + [g, b]
#     if (isinstance(c, tuple) or isinstance(c, list)) and len(c) == 3:
#         if all([(isinstance(x, int) or isinstance(x, float)) and -1 < x < 256 for x in c]):
#             return True
#     elif isinstance(c, str) and (len(c) == 7 or len(c) == 6):
#         # print("str parsing")
#         if len(c) == 7:
#             if c[0] != "#":
#                 return False
#             c = c[1:]
#         valid = list(map(str, range(10))) + [chr(97 + x) for x in range(6)] + [chr(65 + x) for x in range(6)]
#         # print("valid: {}".format(valid))
#         for i in c:
#             if i not in valid:
#                 return False
#         return True
#     elif isinstance(c, str) and g is None and b is None:
#         if c in COLOURS:
#             return True
#     return False


class Colour:

    def __init__(self, c, g=None, b=None, hex_code=None, rgb_code=None, colour_name=None):
        self.hex_code = hex_code
        self.rgb_code = rgb_code
        self.colour_name = colour_name
        # print(f"{c=}, {g=}, {b=}, {self.hex_code=}, {self.rgb_code=}")
        if not iscolour(c, g, b):
            raise TypeError(f"Error params {c=}, {g=}, {b=} do not represent a valid colour.")
        else:
            if is_rgb_colour(c, g, b):
                if g is None and b is None:
                    r, g, b = c
                else:
                    r, g, b = c, g, b
            elif is_hex_colour(c):
                r, g, b = hex_to_rgb(c)
            elif isinstance(c, str) and c.upper() in COLOURS:
                r, g, b = COLOURS[c.upper()]["R"], COLOURS[c.upper()]["G"], COLOURS[c.upper()]["B"]
            else:
                r, g, b = None, None, None
                # print(f"{c=}, {type(c)=}")

            self.rgb_code = r, g, b
            # print(f"{self.hex_code=}, {self.rgb_code=}")
            self.hex_code = rgb_to_hex(self.rgb_code)

            if self.colour_name is None:
                if self.hex_code in COLOURS_INVERSE:
                    self.colour_name = COLOURS_INVERSE[self.hex_code]

            # print(f"{self.hex_code=}, {self.rgb_code=}")
            self.hex_code = rgb_to_hex(self.rgb_code)

    def __iter__(self):
        rgb = self.rgb_code
        for code in rgb:
            yield code

    def __hash__(self):
        return self.hex_code

    def __eq__(self, other):
        return isinstance(other, Colour) and self.hex_code == other.hex_code

    def __repr__(self):
        r, g, b = self.rgb_code
        name = self.colour_name if self.colour_name else "UNNAMED"
        return "<Colour RGB=({r}, {g}, {b}), hex = '{h}', name = '{n}'>".format(r=r, g=g, b=b, h=self.hex_code, n=name)


def iscolour(c, g=None, b=None):
    # print("c: <{}>, t: <{}>".format(c, type(c)))
    # print("c: <{}>, t: <{}>".format(g, type(g)))
    # print("c: <{}>, t: <{}>".format(b, type(b)))
    if is_rgb_colour(c, g, b):
        return True
    elif is_hex_colour(c):
        return True
    elif isinstance(c, str) and g is None and b is None:
        if c.upper() in COLOURS:
            return True
    return False


def gradient(x, n, c1, c2):
    """Using increments, calculate a colour between two colours.
    ex. gradient(5, 10, BLACK, WHITE) -> A colour 5/10 te way between c1 & c2.
                                      -> .
    :rtype: Tuple object representing an RGB colour (R, G, B)
    """
    assert isinstance(x, int) or isinstance(x, float), "Parameter \"x\": ({}) needs to be a number.".format(x)
    assert isinstance(n, int) or isinstance(n, float), "Parameter \"n\": ({}) needs to be a number.".format(n)
    assert iscolour(c1), "Parameter \"c1\": ({}) needs to be a colour.".format(c1)
    assert iscolour(c2), "Parameter \"c2\": ({}) needs to be a colour.".format(c2)
    assert x <= n, "Parameter \"x\": ({}) needs to be less than or equal to parameter \"n\": ({}).".format(x, n)
    assert 0 < n, "Parameter \"n\": ({}) must be non-zero and positive.".format(n)
    r1, g1, b1 = c1
    r2, g2, b2 = c2
    p = abs(x / n)
    r_diff = p * abs(r1 - r2)
    g_diff = p * abs(g1 - g2)
    b_diff = p * abs(b1 - b2)
    if r1 >= r2:
        r_diff *= -1
    if g1 >= g2:
        g_diff *= -1
    if b1 >= b2:
        b_diff *= -1
    return r1 + r_diff, g1 + g_diff, b1 + b_diff


# Darken an RGB color using a proportion p (0-1)
def darken(c, p, rgb=True):
    if is_hex_colour(c):
        c = hex_to_rgb(c)
    if not iscolour(c):
        raise ValueError(f"Error cannot brighten non-colour object: {c}")
    r, g, b = c
    r = clamp(0, round(r - (255 * p)), 255)
    g = clamp(0, round(g - (255 * p)), 255)
    b = clamp(0, round(b - (255 * p)), 255)
    return (r, g, b) if rgb else rgb_to_hex((r, g, b))


# Brighten an RGB color using a proportion p (0-1)
def brighten(c, p, rgb=True):
    if is_hex_colour(c):
        c = hex_to_rgb(c)
    if not iscolour(c):
        raise ValueError(f"Error cannot brighten non-colour object: {c}")
    r, g, b = c
    r = clamp(0, round(r + (255 * p)), 255)
    g = clamp(0, round(g + (255 * p)), 255)
    b = clamp(0, round(b + (255 * p)), 255)
    return (r, g, b) if rgb else rgb_to_hex((r, g, b))


def font_foreground(colour_in, threshold=255 * 3 / 2, rgb=True):
    """Given a background colour and a minimum threshold, return BLACK or WHITE to ensure a font of this colour will be visible on the background."""
    assert iscolour(colour_in), f"Error cannot infer the correct font fore-colour from a non colour object. Got '{colour_in}', type={type(colour_in)}"
    try:
        if isinstance(colour_in, str):
            colour_in = hex_to_rgb(colour_in)
        s = sum(colour_in)
        if s < threshold:
            # return WHITE on BLACK
            return WHITE if rgb else rgb_to_hex(WHITE)
        else:
            # return BLACK on WHITE
            return BLACK if rgb else rgb_to_hex(BLACK)
    except ValueError as ve:
        raise ValueError(f"Error cannot convert \'{colour_in}\' to a valid RGB colour scheme.", ve)
    except IndexError as ie:
        raise IndexError(f"Error cannot convert \'{colour_in}\' to a valid RGB colour scheme.", ie)
    except TypeError as te:
        raise TypeError(f"Error cannot convert \'{colour_in}\' to a valid RGB colour scheme.", te)


def rainbow_gradient(n_slices=None, start_colour="red", rgb=True):
    # values = [(255, i, 0) for i in range(256)] + \
    #          [(i, 255, 0) for i in range(255, -1, -1)] + \
    #          [(0, 255, i) for i in range(255)] + \
    #          [(0, i, 255) for i in range(255, -1, -1)] + \
    #          [(i, 0, 255) for i in range(256)] + \
    #          [(255, 0, i) for i in range(255, -1, -1)]
    lst = "red", "yellow", "green", "cyan", "blue", "magenta"
    valid_starts = list(lst)  # set(lst).union(set(map(str.upper, lst))).union(set(map(str.title, lst)))
    start_colour = start_colour.lower()
    if start_colour not in valid_starts:
        start_colour = "red"
    colour_lsts = [
        red_yellow := [(255, i, 0) for i in range(256)],
        yellow_green := [(i, 255, 0) for i in range(255, -1, -1)],
        green_cyan := [(0, 255, i) for i in range(255)],
        cyan_blue := [(0, i, 255) for i in range(255, -1, -1)],
        blue_magenta := [(i, 0, 255) for i in range(256)],
        magenta_red := [(255, 0, i) for i in range(255, -1, -1)]
    ]
    idx = valid_starts.index(start_colour)
    # print(f"idx: {idx}")
    # print(f"A({len(values)}): <{values}>")
    values = flatten(colour_lsts[idx:] + colour_lsts[:idx])
    # print(f"A({len(values)}): <{values}>")
    # print(f"len(values): {len(values)}")
    l = len(values)
    if isinstance(n_slices, int):
        p = min(l, n_slices) / (l if l != 0 else 1)
    elif isinstance(n_slices, float):
        p = max(0, min(1, n_slices))
    elif n_slices is None:
        p = 1
    else:
        raise TypeError(f"Param 'n_slice' not recognized: <{type(n_slices)}>")
    values = reduce(values, p, how="distribute")
    # print(f"C({len(values)}): <{values}>")
    # print(f"D({len(lst)}): <{lst[idx:] + lst[:idx]}>")
    for val in values:
        if rgb:
            yield val
        else:
            yield rgb_to_hex(val)
